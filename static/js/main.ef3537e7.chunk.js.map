{"version":3,"sources":["components/BlogItem/index.js","components/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["BlogItem","props","details","title","userId","react_default","a","createElement","Fragment","className","Home","state","isRendering","blogData","componentDidMount","_this","getData","_callee","response","data","regenerator_default","wrap","_context","prev","next","fetch","sent","json","console","log","ok","setState","stop","_this$state","this","react_loader_spinner_esm","map","eachdata","src_components_BlogItem","key","id","Component","App","components_Home","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"mTAmBeA,SAhBC,SAAAC,GAAO,IACZC,EAASD,EAATC,QACDC,EAAeD,EAAfC,MAAMC,EAASF,EAATE,OAEZ,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,SAAIJ,GACJE,EAAAC,EAAAC,cAAA,SAAIH,gBCqCLM,6MA1CXC,MAAM,CACFC,aAAY,EACZC,SAAS,MAIbC,kBAAkB,WACdC,EAAKC,aAGTA,6BAAQ,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAC,EAAAd,EAAAe,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEiBC,MAAM,8CAFvB,cAEEP,EAFFI,EAAAI,KAAAJ,EAAAE,KAAA,EAGaN,EAASS,OAHtB,OAGER,EAHFG,EAAAI,KAIJE,QAAQC,IAAIV,IACM,IAAdD,EAASY,GACTf,EAAKgB,SAAS,CAAClB,SAASM,EAAKP,aAAY,IAEzCG,EAAKgB,SAAS,CAACnB,aAAY,IAR3B,wBAAAU,EAAAU,SAAAf,8EAaA,IAAAgB,EACyBC,KAAKvB,MAA3BC,EADHqB,EACGrB,YAAYC,EADfoB,EACepB,SACnB,OACIR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACVG,EAAcP,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,MAEXtB,EAASuB,IAAI,SAAAC,GAAQ,OACjBhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAUC,IAAKF,EAASG,GAAItC,QAASmC,cAhC1CI,aCEJC,EAFH,kBAAMrC,EAAAC,EAAAC,cAACoC,EAAD,OCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACPrD,EAAAC,EAAAC,cAACF,EAAAC,EAAMqD,WAAP,KACEtD,EAAAC,EAAAC,cAACqD,EAAD,OAEFC,SAASC,eAAe,SAM1BlB","file":"static/js/main.ef3537e7.chunk.js","sourcesContent":["import './index.css'\r\nimport React from 'react'\r\n\r\nconst BlogItem =props=>{\r\n    const {details}=props\r\n    const{title,userId,}=details\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"bg-container\">\r\n            <div className=\"sm-container\">\r\n                <p>{title}</p>\r\n                <p>{userId}</p>\r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default BlogItem","import React, {Component} from 'react'\r\nimport BlogItem from '../BlogItem'\r\nimport {TailSpin} from 'react-loader-spinner'\r\n//import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\r\n\r\nclass Home extends Component{\r\n\r\n    state={\r\n        isRendering:true,\r\n        blogData:[]\r\n        \r\n    }\r\n\r\n    componentDidMount=()=>{\r\n        this.getData()\r\n    }\r\n\r\n    getData=async()=>{\r\n\r\n        const response=await fetch('https://jsonplaceholder.typicode.com/todos')\r\n        const data=await response.json()\r\n        console.log(data)\r\n        if (response.ok===true){\r\n            this.setState({blogData:data,isRendering:false})\r\n        }else{\r\n            this.setState({isRendering:false})\r\n        }\r\n    }\r\n\r\n  \r\n    render(){\r\n        const {isRendering,blogData}=this.state\r\n        return(\r\n            <div className=\"app-container\">\r\n                {isRendering? (<TailSpin/>\r\n                    /* <Loader type=\"TailSpin\" color=\"#00BFFF\" height={50} width={50} /> */):(\r\n                    blogData.map(eachdata=>(\r\n                        <BlogItem key={eachdata.id} details={eachdata}/>\r\n                    ))\r\n                )}\r\n\r\n            </div>\r\n        )\r\n            \r\n\r\n            \r\n        }\r\n    \r\n}\r\nexport default Home","import react from 'react'\nimport './App.css'\nimport Home from  './components/Home'\nimport React from \"react\"\n\nconst App = () => <Home/>\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}